import copy
import logging
from collections import defaultdict

import numpy as np
from numpy import flipud
from random import sample

from ped_env.objects import Person
from ped_env.settings import identity
from ped_env.functions import angle_between


class Map:
    def __init__(self, map: np.ndarray, exits: list, start_points: list, random_exits: list, name, radius,
                 map_spawn: np.ndarray):
        # 对地图进行翻转操作
        map = flipud(map).astype(str)
        self.map = map.T
        map_spawn = flipud(map_spawn)
        self.map_spawn = map_spawn.T
        self.key_points_list = []
        self.key_points_set = set()
        self.exits = exits  # 1.用作计算距离出口的距离，比较关键
        self.start_points = start_points  # 代表所有可能的生成点，这个属性会用做生成点生成和每个生成点的行人数量划分！
        self.create_radius = radius
        self.name = name
        self.random_exits = random_exits  # 根据数组中数字随机一个出口
        self.exit_points_dic = defaultdict(list)
        self.has_key_roads = False
        self.max_dis_to_exit = 1.0
        #self.init()

    def init(self):
        exit_symbol = set(str(i) for i in range(3, 10))
        exit_points = []
        spawn_x, spawn_y = self.start_points[0][0], self.start_points[0][1]
        max_dis = 0.0
        for i in range(self.map.shape[0]):
            for j in range(self.map.shape[1]):
                if self.map[i, j] in exit_symbol:
                    self.exit_points_dic[self.map[i, j]].append((i + 0.5, j + 0.5))  # 将对应出口的节点添加到字典中
                    exit_points.append((i + 0.5, j + 0.5))
                    #max_dis = max((i + 0.5 - spawn_x)**2+(j + 0.5 - spawn_y)**2)
        for i in range(self.map_spawn.shape[0]):
            for j in range(self.map_spawn.shape[1]):
                if self.map_spawn[i, j] == "k":  # 关键点
                    self.has_key_roads = True
                    self.key_points_list.append([i, j])
                    self.key_points_set.add((i, j))
        self.key_points_list = np.array(self.key_points_list)
        # if len(key_points) != 0:
        #     logging.warning(u"检测到存在关键点，设置关键点地图...")
        #     for i in range(self.map_spawn.shape[0]):
        #         for j in range(self.map_spawn.shape[1]):
        #             if self.map_spawn[i, j] in exit_symbol:
        #                 spawn_points.append((i + 0.5, j + 0.5))
        #     planner = AStar(self)
        #     # 针对每一条从起始点到关键点然后到生成点的线都是关键路径
        #     for ex in exit_points:
        #         for sp in spawn_points:
        #             for key_po
        #     planner.next_loc()
        return self



    def get_ped_to_exit_dis_and_dir(self, ped: Person):
        min_dis = 100000000  # 设置一个最大值
        min_exit = None
        px, py = ped.getX, ped.getY
        for exit_pos in self.exit_points_dic[str(ped.exit_type)]:
            ex, ey = exit_pos
            dis = ((px - ex) ** 2 + (py - ey) ** 2) ** 0.5
            if dis < min_dis:
                min_dis = dis
                min_exit = (ex, ey)
        if min_dis != 0.0:
            rx = min_exit[0] - px
            ry = min_exit[1] - py
            angle = angle_between(identity, np.array([rx, ry]))
        else:
            angle = 0.0
        return min_dis, angle

    @property
    def width(self):
        return self.map.shape[0]

    @property
    def height(self):
        return self.map.shape[1]

    def get_random_exit(self, index):
        return sample(self.random_exits[0], 1)[0]

    def __str__(self):
        return self.name


"""
#########################################################
# 可选的地块类型有：
# 1, 2, 3-9代表不同类型的出口
# lw, rw, uw, dw, mrw, mcw, cluw, cldw, cruw, crdw
# 这些记号代表left,right,up,down的缩写
# mrw,mcw代表mid row wall,mid column wall稍有所不同
# 
#########################################################
"""

# start_points_map1 = [(12.5, 7.5), (10.5, 5.5), (7.5, 7.5), (12.5, 12.5), (10.5, 14.5), (7.5, 12.5)]
# exit_map1 = [(19.5, 7), (9, 0.5), (0.5, 7), (19.5, 12), (9, 19.5), (0.5, 12)]
# radius_map1 = 1
# random_exits1 = [[3], [4], [5], [6], [7], [8]]
#
# # 20*20
# map1 = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6],
#     [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6],
#     [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2]
# ])
#
# start_points_map2 = [(1.5, 3), (1.5, 8)]
# exit_map2 = [(11.5, 2), (11.5, 9)]
# radius_map2 = 1
# random_exits2 = [[3], [4]]
#
# # 10*10
# map2 = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
# # map_2对应的生成点地图
# map2_spawn = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 2],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
# start_points_map5 = [(1.5, 3), (1.5, 8)]
# exit_map5 = [(11.5, 2), (11.5, 9)]
# radius_map5 = 1
# random_exits5 = [[3], [4]]
#
# # 不进行交叉
# map5 = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
# map5_spawn = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 2],
#     [2, 4, 4, 1, 1, 4, 4, 4, 0, 0, 0, 2],
#     [2, 4, 4, 1, 1, 4, 4, 4, 0, 0, 0, 2],
#     [2, 4, 4, 1, 1, 4, 4, 4, 0, 0, 0, 2],
#     [2, 3, 3, 1, 1, 3, 3, 3, 0, 0, 0, 2],
#     [2, 3, 3, 1, 1, 3, 3, 3, 0, 0, 0, 2],
#     [2, 3, 3, 1, 1, 3, 3, 3, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
# start_points_map6 = [(1.5, 3), (1.5, 8)]
# exit_map6 = [(11.5, 2), (11.5, 9)]
# radius_map6 = 1
# random_exits6 = [[3], [4]]
#
# map6 = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
#     [2, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 4],
#     [2, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 2],
#     [2, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
# map6_spawn = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 2],
#     [2, 4, 4, 1, 1, 4, 4, 1, 1, 0, 0, 2],
#     [2, 4, 4, 1, 1, 4, 4, 1, 1, 0, 0, 2],
#     [2, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2],
#     [2, 3, 3, 1, 1, 3, 3, 1, 1, 0, 0, 2],
#     [2, 3, 3, 1, 1, 3, 3, 1, 1, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2],
#     [2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
start_points_map7 = [(7.5, 11.5), (11.5, 11.5), (7.5, 8.5), (11.5, 8.5)]
exit_map7 = [(4.5, 19.5), (16.5, 19.5), (4.5, 0.5), (16.5, 0.5)]
radius_map7 = 1
random_exits7 = [[3], [3], [3], [3]]

# 20*20
map7 = np.array([
    [2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2]
])

map7_spawn = np.array([
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2],
    [2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2],
    [2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2],
    [2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2],
    [2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2],
    [2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
])


#
# start_points_map8 = [(2, 7), (12.5, 7)]
# exit_map8 = [(14.5, 7.5), (0.5, 7.5)]
# radius_map8 = 1.5
# random_exits8 = [[3], [4]]
#
# map8 = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
# map8_spawn = np.array([
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 2],
#     [2, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 2],
#     [2, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
#     [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
# ])
#
start_points_map9 = [(4, 3)]
exit_map9 = [(5.5, 18.5)]
radius_map9 = 1
random_exits9 = [[3]]

map9 = np.array([
    [2,     2,      2,      2,      2,      3,      3,      2,      2,      2,      2,      2,      2,      2,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,  'dw',   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',      0,      0,      0,      0,   'dw',      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',      0,      0,   'dw',   'dw',      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2],
    [2,     2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2],
])

map9_spawn = np.array([
    [2,     2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',    'k',    'k',    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',    'k',    'k',    'k',    'k',      0,      0,      2],
    [2,  'dw',   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',      0,    'k',    'k',      0,   'dw',      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',   'dw',    'k',    'k',   'dw',   'dw',      2],
    [2,     0,      0,      0,      0,      3,      3,      3,      0,      0,    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      3,      3,      3,    'k',    'k',    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      3,      3,      3,    'k',    'k',    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      3,      3,      3,    'k',    'k',    'k',    'k',      0,      0,      2],
    [2,     0,      0,      0,      0,      3,      3,      3,      0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      3,      3,      3,      0,      0,      0,      0,      0,      0,      2],
    [2,     2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2],
])

start_points_map10 = [(4.5, 4.5)]
exit_map10 = [(22.5, 13.5)]
radius_map10 = 1
random_exits10 = [[3]]

map10 = np.array([
    [2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      3,      3,      3, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,   "uw",      0,      0,   "uw",   "uw",      0,      0,   "uw",   "uw", 'cruw',   "uw",   "uw",   "uw",   "uw",   "uw",   "uw",   "uw",   "uw",   "uw", "cruw",      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",   "dw",   "dw",   "dw", 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2, 2],
])

map10_spawn = np.array([
    [2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,     2],
    [2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',    'k',     2],
    [2,      0,    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',     2],
    [2,      0,    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',     2],
    [2,      0,    'k',    'k',      0,      0,    'k',    'k',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,     2],
    [2,   "uw",    'k',    'k',   "uw",   "uw",    'k',    'k',   "uw",   "uw", 'cruw',   "uw",   "uw",   "uw",   "uw",   "uw",   "uw",   "uw",   "uw",   "uw", "cruw",      0,      0,      0,     2],
    [2,      0,    'k',    'k',      0,      0,    'k',    'k',      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",      0,      0,      0,     2],
    [2,      0,    'k',    'k',      0,      0,    'k',    'k',      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",      0,      0,      0,     2],
    [2,      0,    'k',    'k',      0,      0,    'k',    'k',      0,      0,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",      0,      0,      0,     2],
    [2,      3,      3,      3,      3,      3,      3,      3,      3,      3,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,   "rw",   "dw",   "dw",   "dw",     2],
    [2,      3,      3,      3,      3,      3,      3,      3,      3,      3,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,     2],
    [2,      3,      3,      3,      3,      3,      3,      3,      3,      3,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,     2],
    [2,      3,      3,      3,      3,      3,      3,      3,      3,      3,   'rw',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,     2],
    [2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,     2],
])

start_points_map11 = [(8, 8)]
exit_map11 = [(5.5, 14.5), (24.5, 14.5)]
radius_map11 = 1
random_exits11 = [[3]]

map11 = np.array([
    [2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
])

map11_spawn = np.array([
    [2,     2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2, 2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',    'k',    'k',      0, 2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',    'k',    'k',      0, 2],
    [2,     2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0, 2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      2,      2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',    'k',    'k',      3,      3,      3,      3,      0,      2,      2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',    'k',    'k',      3,      3,      3,      3,      0,      2,      2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',      0,      0,      3,      3,      3,      3,      0,      2,      2,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',      0, 2],
    [2,     0,      0,    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',    'k',      0, 2],
    [2,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0, 2],
    [2,     2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2,      2, 2],
])


start_points_map12 = [(11, 17)]
exit_map12 = [(6.5, 0.5), (6.5, 20.5)]
radius_map12 = 1
random_exits12 = [[3]]


map12 = np.array([
    [2,     2,      2,      2,      2,      3,      3,      2,       2,      2,      2,      2,      2,      2,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,  'uw',   'uw',   'uw', 'cruw',      0,      0,      0,  'cldw',   'dw',   'dw',   'dw',      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,       0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,       0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,       0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,       0,      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,       0,      0,      0,      0,      0,      0,      2],
    [2,  'uw',   'uw',   'uw', 'cruw',      0,      0,      0,  'cluw',   'uw',   'uw',   'uw',      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,       0,      0,      0,      0,      0,      0,      2],
    [2,     2,      2,      2,      2,      3,      3,      3,       2,      2,      2,      2,      2,      2,      2],
])

map12_spawn = np.array([
    [2,     2,      2,      2,      2,      2,      2,      2,       2,      2,      2,      2,      2,      2,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      3,      3,      3,      3,      0,      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,    'lw',      3,      3,      3,      3,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      3,      3,      3,      3,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      3,      3,      3,      3,      0,      2],
    [2,     0,      0,      0,      0,      0,      0,      0,    'lw',      0,      0,      0,    'k',    'k',      2],
    [2,  'uw',   'uw',   'uw', 'cruw',      0,      0,      0,  'cldw',   'dw',   'dw',   'dw',    'k',    'k',      2],
    [2,     0,      0,      0,   'rw',      0,      0,      0,       0,      0,      0,      0,    'k',    'k',      2],
    [2,     0,      0,      0,   'rw',      0,    'k',    'k',     'k',    'k',    'k',    'k',    'k',    'k',      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',     'k',    'k',    'k',    'k',    'k',    'k',      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',     'k',    'k',    'k',    'k',    'k',    'k',      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',       0,      0,      0,      0,      0,      0,      2],
    [2,  'uw',   'uw',   'uw', 'cruw',      0,    'k',    'k',  'cluw',   'uw',   'uw',   'uw',      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,    'k',    'k',    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,    'k',    'k',    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,   'rw',      0,    'k',    'k',    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',    'lw',      0,      0,      0,      0,      0,      2],
    [2,     0,      0,      0,      0,      0,    'k',    'k',       0,      0,      0,      0,      0,      0,      2],
    [2,     2,      2,      2,      2,      2,      2,      2,       2,      2,      2,      2,      2,      2,      2],
])

start_points_map_simple = [(1, 1)]
exit_map_simple = [(0, 2)]
radius_map_simple = 2
random_exit_simple = [[3]]

map_simple = np.array(
    [[2, 2, 3, 3, 2, 2],
     [2, 0, 0, 0, 0, 2],
     [3, 0, 0, 0, 0, 3],
     [3, 0, 0, 0, 0, 3],
     [2, 0, 0, 0, 0, 2],
     [2, 2, 3, 3, 2, 2]], dtype=str
)

map_simple_spawn = np.array(
    [[2, 2, 2, 2, 2, 2],
     [2, 0, 0, 0, 0, 2],
     [2, 0, 3, 3, 0, 2],
     [2, 0, 3, 3, 0, 2],
     [2, 0, 0, 0, 0, 2],
     [2, 2, 2, 2, 2, 2]]
)

map_simple = Map(map_simple, exit_map_simple, start_points_map_simple, random_exit_simple, "map_simple",
                 radius_map_simple, map_simple_spawn)
# map_01 =  Map(map1, exit_map1, start_points_map1, random_exits1, "map_01", radius_map1)
# map_02 = Map(map2, exit_map2, start_points_map2, random_exits2, "map_02", radius_map2, map2_spawn)
# map_05 = Map(map5, exit_map5, start_points_map5, random_exits5, "map_05", radius_map5,
#              map5_spawn)  # simple 1600 16 51.01min TD3
# map_06 = Map(map6, exit_map6, start_points_map6, random_exits6, "map_06", radius_map6,
#              map6_spawn)  # hard 1600 16 6_map11_use hour TD3
map_07 =  Map(map7, exit_map7, start_points_map7, random_exits7, "map_07", radius_map7, map7_spawn)

# map_08 = Map(map8, exit_map8, start_points_map8, random_exits8, "map_08", radius_map8, map8_spawn)
map_09 = Map(map9, exit_map9, start_points_map9, random_exits9, "map_09", radius_map9, map9_spawn)

map_10 = Map(map10, exit_map10, start_points_map10, random_exits10, "map_10", radius_map10, map10_spawn)
map_11 = Map(map11, exit_map11, start_points_map11, random_exits11, "map_11", radius_map11, map11_spawn)
map_12 = Map(map12, exit_map12, start_points_map12, random_exits12, "map_12", radius_map12, map12_spawn)

# map_test = Map(test_map, exit_test_map, start_points_test_map, "map_test", radius_test_map)

register_dict = {
    'map_simple': map_simple,
    'map_07': map_07,
    'map_09': map_09,
    'map_10': map_10,
    'map_11': map_11,
    "map_12": map_12,
}

register_state = set()


def parse_map(map_name: str):
    no_inited_map = register_dict[map_name]
    if map_name not in register_state:
        inited_map = no_inited_map.init() #延迟初始化
        register_state.add(map_name)
    else:
        inited_map = no_inited_map
    return inited_map
